const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function seedDatabase() {
  console.log('Seeding database with sample data...')

  // Sample incidents for testing
  const sampleIncidents = [
    {
      title: '‡¶¢‡¶æ‡¶ï‡¶æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶ú‡¶®‡ßà‡¶§‡¶ø‡¶ï ‡¶∏‡¶Ç‡¶ò‡¶∞‡ßç‡¶∑‡ßá ‡ß´ ‡¶ú‡¶® ‡¶Ü‡¶π‡¶§',
      location: '‡¶¢‡¶æ‡¶ï‡¶æ',
      latitude: 23.8103,
      longitude: 90.4125,
      injured: 5,
      killed: 0,
      politicalParty: '‡¶Ü‡¶ì‡¶Ø‡¶º‡¶æ‡¶Æ‡ßÄ ‡¶≤‡ßÄ‡¶ó',
      perpetratorRole: 'aggressor',
      date: new Date('2024-01-15'),
      severity: 'medium',
      description: '‡¶¢‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ó‡ßÅ‡¶≤‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶®‡ßá ‡¶¶‡ßÅ‡¶á ‡¶¶‡¶≤‡ßá‡¶∞ ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∏‡¶Ç‡¶ò‡¶∞‡ßç‡¶∑‡ßá ‡ß´ ‡¶ú‡¶® ‡¶Ü‡¶π‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡¶®‡•§',
      sourceUrl: 'https://example.com/news/1',
      images: JSON.stringify([])
    },
    {
      title: '‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá ‡¶∞‡¶æ‡¶ú‡¶®‡ßà‡¶§‡¶ø‡¶ï ‡¶Æ‡¶ø‡¶õ‡¶ø‡¶≤‡ßá ‡¶π‡¶æ‡¶Æ‡¶≤‡¶æ',
      location: '‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ',
      latitude: 22.3569,
      longitude: 91.7832,
      injured: 3,
      killed: 1,
      politicalParty: '‡¶¨‡¶ø‡¶è‡¶®‡¶™‡¶ø',
      perpetratorRole: 'aggressor',
      date: new Date('2024-01-10'),
      severity: 'severe',
      description: '‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá ‡¶¨‡¶ø‡¶∞‡ßã‡¶ß‡ßÄ ‡¶¶‡¶≤‡ßá‡¶∞ ‡¶Æ‡¶ø‡¶õ‡¶ø‡¶≤‡ßá ‡¶π‡¶æ‡¶Æ‡¶≤‡¶æ‡¶Ø‡¶º ‡ßß ‡¶ú‡¶® ‡¶®‡¶ø‡¶π‡¶§ ‡¶ì ‡ß© ‡¶ú‡¶® ‡¶Ü‡¶π‡¶§‡•§',
      sourceUrl: 'https://example.com/news/2',
      images: JSON.stringify([])
    },
    {
      title: '‡¶∏‡¶ø‡¶≤‡ßá‡¶ü‡ßá ‡¶õ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∏‡¶Ç‡¶ó‡¶†‡¶®‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ò‡¶∞‡ßç‡¶∑',
      location: '‡¶∏‡¶ø‡¶≤‡ßá‡¶ü',
      latitude: 24.8949,
      longitude: 91.8687,
      injured: 8,
      killed: 0,
      politicalParty: '‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡¶≤‡ßÄ‡¶ó',
      perpetratorRole: 'unclear',
      date: new Date('2024-01-08'),
      severity: 'heavy',
      description: '‡¶∏‡¶ø‡¶≤‡ßá‡¶ü‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶Ø‡¶º ‡¶¶‡ßÅ‡¶á ‡¶õ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∏‡¶Ç‡¶ó‡¶†‡¶®‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∏‡¶Ç‡¶ò‡¶∞‡ßç‡¶∑‡•§',
      sourceUrl: 'https://example.com/news/3',
      images: JSON.stringify([])
    },
    {
      title: '‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ‡¶§‡ßá ‡¶π‡¶∞‡¶§‡¶æ‡¶≤ ‡¶™‡¶æ‡¶≤‡¶®‡ßá ‡¶¨‡¶ø‡¶ï‡ßç‡¶∑‡ßã‡¶≠',
      location: '‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ',
      latitude: 24.3745,
      longitude: 88.6042,
      injured: 2,
      killed: 0,
      politicalParty: '‡¶ú‡¶æ‡¶Æ‡¶æ‡¶Ø‡¶º‡¶æ‡¶§‡ßá ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ',
      date: new Date('2024-01-05'),
      severity: 'light',
      description: '‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ‡¶§‡ßá ‡¶π‡¶∞‡¶§‡¶æ‡¶≤ ‡¶™‡¶æ‡¶≤‡¶®‡¶ï‡¶æ‡¶≤‡ßá ‡¶™‡ßÅ‡¶≤‡¶ø‡¶∂‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶¨‡¶ø‡¶ï‡ßç‡¶∑‡ßã‡¶≠‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ò‡¶∞‡ßç‡¶∑‡•§',
      sourceUrl: 'https://example.com/news/4',
      images: JSON.stringify([])
    },
    {
      title: '‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ‡¶Ø‡¶º ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®‡ßÄ ‡¶∏‡¶π‡¶ø‡¶Ç‡¶∏‡¶§‡¶æ',
      location: '‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ',
      latitude: 22.8456,
      longitude: 89.5403,
      injured: 6,
      killed: 2,
      politicalParty: '‡¶ú‡¶æ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶™‡¶æ‡¶∞‡ßç‡¶ü‡¶ø',
      date: new Date('2024-01-12'),
      severity: 'severe',
      description: '‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ‡¶Ø‡¶º ‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡¶Ø‡¶º ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®‡ßá‡¶∞ ‡¶¶‡¶ø‡¶® ‡¶∏‡¶π‡¶ø‡¶Ç‡¶∏‡¶§‡¶æ‡¶Ø‡¶º ‡ß® ‡¶ú‡¶® ‡¶®‡¶ø‡¶π‡¶§‡•§',
      sourceUrl: 'https://example.com/news/5',
      images: JSON.stringify([])
    },
    {
      title: '‡¶¨‡¶∞‡¶ø‡¶∂‡¶æ‡¶≤‡ßá ‡¶è‡¶®‡¶∏‡¶ø‡¶™‡¶ø ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶π‡¶æ‡¶Æ‡¶≤‡¶æ',
      location: '‡¶¨‡¶∞‡¶ø‡¶∂‡¶æ‡¶≤',
      latitude: 22.7010,
      longitude: 90.3535,
      injured: 4,
      killed: 0,
      politicalParty: '‡¶è‡¶®‡¶∏‡¶ø‡¶™‡¶ø',
      date: new Date('2024-01-20'),
      severity: 'medium',
      description: '‡¶¨‡¶∞‡¶ø‡¶∂‡¶æ‡¶≤‡ßá ‡¶è‡¶®‡¶∏‡¶ø‡¶™‡¶ø ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶æ‡¶¨‡ßá‡¶∂‡ßá ‡¶¨‡¶ø‡¶∞‡ßã‡¶ß‡ßÄ ‡¶¶‡¶≤‡ßá‡¶∞ ‡¶π‡¶æ‡¶Æ‡¶≤‡¶æ‡¶Ø‡¶º ‡ß™ ‡¶ú‡¶® ‡¶Ü‡¶π‡¶§‡•§',
      sourceUrl: 'https://www.dainikbangla.com/news/6',
      images: JSON.stringify([])
    },
    {
      title: '‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π‡ßá ‡¶∞‡¶æ‡¶ú‡¶®‡ßà‡¶§‡¶ø‡¶ï ‡¶¶‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∏‡¶Ç‡¶ò‡¶æ‡¶§',
      location: '‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π',
      latitude: 24.7471,
      longitude: 90.4203,
      injured: 7,
      killed: 1,
      politicalParty: '‡¶è‡¶®‡¶∏‡¶ø‡¶™‡¶ø',
      date: new Date('2024-01-18'),
      severity: 'heavy',
      description: '‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π‡ßá ‡¶è‡¶®‡¶∏‡¶ø‡¶™‡¶ø ‡¶ì ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶¶‡¶≤‡ßá‡¶∞ ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ò‡¶∞‡ßç‡¶∑‡ßá ‡ßß ‡¶ú‡¶® ‡¶®‡¶ø‡¶π‡¶§‡•§',
      sourceUrl: 'https://www.bd-pratidin.com/news/7',
      images: JSON.stringify([])
    }
  ]

  // Sample news sources - updated with all requested portals
  const newsSources = [
    {
      name: 'Prothom Alo',
      url: 'https://www.prothomalo.com/politics',
      isActive: true
    },
    {
      name: 'The Daily Star',
      url: 'https://www.thedailystar.net/politics',
      isActive: true
    },
    {
      name: 'Kaler Kantho',
      url: 'https://www.kalerkantho.com/politics',
      isActive: true
    },
    {
      name: 'Dainik Bangla',
      url: 'https://www.dainikbangla.com/politics',
      isActive: true
    },
    {
      name: 'Dhaka Tribune',
      url: 'https://www.dhakatribune.com/politics',
      isActive: true
    },
    {
      name: 'Daily Manab Zamin',
      url: 'https://mzamin.com/category.php?cat=2',
      isActive: true
    },
    {
      name: 'Protidiner Sangbad',
      url: 'https://www.protidinersangbad.com/politics',
      isActive: true
    },
    {
      name: 'Jugantor',
      url: 'https://www.jugantor.com/politics',
      isActive: true
    },
    {
      name: 'Daily Naya Diganta',
      url: 'https://www.dailynayadiganta.com/politics',
      isActive: true
    },
    {
      name: 'Ittefaq',
      url: 'https://www.ittefaq.com.bd/politics',
      isActive: true
    },
    {
      name: 'Bangladesh Pratidin',
      url: 'https://www.bd-pratidin.com/politics',
      isActive: true
    }
  ]

  try {
    // Insert incidents
    for (const incident of sampleIncidents) {
      await prisma.incident.create({
        data: incident
      })
    }
    console.log(`‚úÖ Created ${sampleIncidents.length} sample incidents`)

    // Insert news sources (upsert to handle duplicates)
    for (const source of newsSources) {
      await prisma.newsSource.upsert({
        where: { url: source.url },
        update: { isActive: source.isActive },
        create: source
      })
    }
    console.log(`‚úÖ Updated ${newsSources.length} news sources`)

    console.log('üéâ Database seeded successfully!')

  } catch (error) {
    console.error('‚ùå Error seeding database:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Run the seed function
seedDatabase()
